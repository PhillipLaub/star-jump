{"version":3,"sources":["utils/setAuthToken.js","context/user/userContext.js","components/layout/Nav.js","context/alert/alertContext.js","components/layout/Alerts.js","components/auth/Register.js","components/auth/Login.js","components/MainApp.js","components/spellingComponents/Shuffle.js","components/spellingComponents/Letter.js","components/spellingComponents/Word.js","components/spellingComponents/WordBank.js","components/spellingComponents/Picture.js","components/spellingComponents/LetterButtons.js","components/gameModules/ABCApp.js","components/gameModules/AnimalApp.js","components/gameModules/ClockApp.js","components/gameModules/ColorApp.js","components/gameModules/MathApp.js","components/gameModules/NumApp.js","components/planetComponents/Picture.js","components/planetComponents/PlanetBank.js","components/planetComponents/Shuffle.js","components/planetComponents/PlanetButton.js","components/gameModules/PlanetApp.js","components/gameModules/ShapeApp.js","context/user/userReducer.js","context/types.js","context/user/UserState.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","userContext","createContext","Nav","useContext","UserContext","isAuthenticated","logout","user","updateStars","authLinks","name","className","stars","onClick","href","guestLinks","to","style","color","alertContext","Alerts","AlertContext","alerts","length","map","alert","key","id","type","msg","Register","props","register","error","clearErrors","setAlert","useEffect","history","push","useState","email","password","password2","setUser","onChange","e","target","value","onSubmit","preventDefault","htmlFor","Login","login","required","MainApp","array","loadUser","Letter","hidden","setHidden","char","setChar","Word","word","i","charAt","console","log","letter","index","hiddenLetterIndex","POOL","words","sort","Math","random","first","this","next","newWordIndex","floor","Picture","src","alt","height","width","Button","setHiddenLetterIndex","setWord","correctButtonIndex","setCorrectButtonIndex","buttonIndex","onClickEvent","hiddenLetter","toString","randomLetter","String","fromCharCode","buttonLetter","buttonClickEvent","generateButtonLetter","ABCApp","score","setScore","WordBank","correctGuess","swal","setTimeout","AnimalApp","pickedWord","currentAudioURL","wordBank","chosenWordArr","correct","Audio","incorrect","SightWordApp","playAudio","audio","setAttribute","load","play","pause","wordClick","clickedWord","innerText","cycle","onLoad","rand","includes","chooseRandomWords","ColorApp","item","setItem","randColor","setRandColor","randId","setRandId","randAudio","setRandAudio","audioNum","cards","colorClick","newItem","card","image","MathApp","class","NumApp","planet","planets","Shuffle","newPlanetIndex","PlanetButton","randomPlanet","buttonPlanet","generatePlanetButton","PlanetApp","PlanetBank","setPlanet","ShapeApp","randShape","setRandShape","shapeClick","state","action","loading","payload","localStorage","removeItem","UserState","initialState","getItem","useReducer","UserReducer","dispatch","a","async","get","res","data","Provider","formData","config","post","response","count","put","_id","children","filter","AlertState","alertReducer","timeout","uuid","v4","Preload","App","path","exact","component","ClockApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0969021f.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete axios.defaults.headers.common['x-auth-token'];\n    }\n};\n\nexport default setAuthToken;\n","// Context for anything to do with the User\n\nimport { createContext } from 'react';\n\nconst userContext = createContext();\n\nexport default userContext;\n","import React, { Fragment, useContext } from 'react';\nimport '../../App.css';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/user/userContext';\n\nfunction Nav() {\n    const userContext = useContext(UserContext);\n\n    const { isAuthenticated, logout, updateStars, user } = userContext;\n\n    const onLogout = () => {\n        logout();\n    };\n\n    // const put = () => {\n    //     /* THIS IS FOR TESTING UPDATE STARS */\n    //     updateStars(user, 3);\n    // };\n\n    const authLinks = (\n        <Fragment>\n            {/* <button onClick={put}></button>{' '} */}\n            {/* THIS IS FOR TESTING UPDATE STARS */}\n            <li>Hello {user && user.name}</li>\n            <li>\n                <i className='fas fa-star'></i>\n                {user && user.stars}\n            </li>\n            <li>\n                <a onClick={onLogout} href='#!'>\n                    <i className='fas fa-sign-out-alt white'></i>\n                    <span className='hide-sm white'>Logout</span>\n                </a>\n            </li>\n        </Fragment>\n    ); // if there is a user, display the users name\n\n    const guestLinks = (\n        <Fragment>\n            <ul className=\"nav-links\"><li>\n                <Link to='/register' className=\"white\">Register</Link>\n            </li>\n            <li>\n                <Link to='/login' className=\"white\">Login</Link>\n            </li></ul>\n            \n        </Fragment>\n    ); // if there is a user, display the users star count\n\n    const navStyle = {\n        color: 'white'\n    };\n\n    return (\n        <nav className='navbar'>\n            <Link to='/' className=\"title-link\">\n                <h1 style={navStyle} className=\"title\">\n                    <i className='far fa-star'></i> Star Jump\n                </h1>\n            </Link>\n            <ul className='nav-links'>\n                {isAuthenticated ? authLinks : guestLinks}\n                {/*                 <Link style={navStyle} to='/mainapp'>\n                    <li>Main App</li>\n                </Link> */}\n            </ul>\n        </nav>\n    );\n}\n\nexport default Nav;\n","// Context for anything to do with Alerts\n\nimport { createContext } from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext;\n","import React, { useContext } from 'react';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Alerts = () => {\n    const alertContext = useContext(AlertContext);\n\n    return (\n        alertContext.alerts.length > 0 &&\n        alertContext.alerts.map(alert => (\n            <div key={alert.id} className={`alert alert-${alert.type}`}>\n                <i className='fas fa-info-circle'></i> {alert.msg}\n            </div>\n        ))\n    );\n};\n\nexport default Alerts;\n","import React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../../context/user/userContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Register = props => {\n    const userContext = useContext(UserContext);\n    const { register, error, clearErrors, isAuthenticated } = userContext;\n\n    const alertContext = useContext(AlertContext);\n    const { setAlert /* removeAlert */ } = alertContext;\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            props.history.push('/mainapp');\n        }\n\n        if (error === 'User already exists') {\n            // setting the error value in state\n            setAlert(error, 'danger'); // calling set alert with the previously set error value\n            clearErrors(); // setting error value back to null\n        }\n        // eslint-disable-next-line\n    }, [error, isAuthenticated, props.history]);\n\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n        password2: ''\n    });\n\n    const { name, email, password, password2 } = user;\n\n    const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        // I want to add an else/if here to remove alert if one exists already\n\n        if (name === '' || email === '' || password === '') {\n            setAlert('Please enter all fields', 'danger');\n        } else if (password !== password2) {\n            setAlert('Passwords do not match', 'danger');\n        } else if (password.length < 6) {\n            setAlert('Password must contain at least 6 characters', 'danger');\n        } else {\n            register({\n                name,\n                email,\n                password,\n                password2\n            });\n        }\n    };\n\n    return (\n        <div className='container w-50 p-3 contain'>\n            <h1 className='text-light font-weight-bold'>\n                Account <span className='text-primary'>Register</span>\n            </h1>\n            <form onSubmit={onSubmit}>\n                <div className='form-group text-left text-light font-weight-bold'>\n                    <label htmlFor='name'>Name:</label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        name='name'\n                        value={name}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className='form-group text-left text-light font-weight-bold'>\n                    <label htmlFor='email'>Email Address:</label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        name='email'\n                        value={email}\n                        onChange={onChange}\n                    />\n                </div>\n                <div className='form-group text-left text-light font-weight-bold'>\n                    <label htmlFor='password'>Password:</label>\n                    <input\n                        className='form-control'\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={onChange}\n                    />{' '}\n                </div>\n                <div className='form-group text-left text-light font-weight-bold'>\n                    <label htmlFor='password2'>Confirm Password:</label>\n                    <input\n                        className='form-control'\n                        type='password'\n                        name='password2'\n                        value={password2}\n                        onChange={onChange}\n                    />\n                </div>\n                <input\n                    type='submit'\n                    value='Register'\n                    className='btn btn-primary btn-block font-weight-bold'\n                />\n            </form>\n        </div>\n    );\n};\n\nexport default Register;\n","import React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../../context/user/userContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Login = props => {\n    const userContext = useContext(UserContext);\n    const { login, error, clearErrors, isAuthenticated } = userContext;\n\n    const alertContext = useContext(AlertContext);\n    const { setAlert /* removeAlert */ } = alertContext;\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            props.history.push('/');\n        }\n\n        if (error === 'Invalid Credentials') {\n            // setting the error value in state\n            setAlert(error, 'danger'); // calling set alert with the previously set error value\n            clearErrors(); // setting error value back to null\n        }\n        // eslint-disable-next-line\n    }, [error, isAuthenticated, props.history]);\n\n    const [user, setUser] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = user;\n\n    const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (email === '' || password === '') {\n            setAlert('Please fill in all fields', 'danger');\n        } else {\n            login({\n                email,\n                password\n            });\n        }\n    };\n\n    return (\n        <div className='container w-50 p-3'>\n            <h1 className='text-light font-weight-bold'>\n                Account\n                <span className='text-primary'> Login</span>\n            </h1>\n            <form onSubmit={onSubmit}>\n                <div className='form-group text-left text-light font-weight-bold'>\n                    <label htmlFor='email'>Email Address:</label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        name='email'\n                        value={email}\n                        onChange={onChange}\n                        required\n                    />\n                </div>\n                <div className='form-group text-left text-light font-weight-bold'>\n                    <label htmlFor='password'>Password:</label>\n                    <input\n                        className='form-control'\n                        type='password'\n                        name='password'\n                        value={password}\n                        onChange={onChange}\n                        required\n                    />\n                </div>\n                <input\n                    type='submit'\n                    value='Login'\n                    className='btn btn-primary btn-block font-weight-bold'\n                />\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n","import React, { useContext, useEffect } from 'react';\nimport './mainAppStyle.css';\nimport { Link } from 'react-router-dom';\n\nimport UserContext from '../context/user/userContext';\n\nfunction MainApp() {\n    const userContext = useContext(UserContext); // init context\n\n    useEffect(() => {\n        userContext.loadUser();\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <div>\n            \n            <div className='container mainspace'>\n                <div className='row'>\n                    <div className='col-md-3'>\n                        <Link to='/math'>\n                            <div className='iconMath hvr-pulse'></div>\n                        </Link>\n                    </div>\n                    <div className='col-md-3'>\n                        <Link to='/abc'>\n                            <div className='iconABC hvr-pulse'></div>\n                        </Link>\n                    </div>\n                    <div className='col-md-3'>\n                        <Link to='/shapes'>\n                            <div className='iconShapes hvr-pulse'></div>\n                        </Link>\n                    </div>\n                    <div className='col-md-3'>\n                        <Link to='/numbers'>\n                            <div className='iconNumbers hvr-pulse'></div>\n                        </Link>\n                    </div>\n                </div>\n                <br />\n                <br />\n\n                <div className='row'>\n                    <div className='col-md-3'>\n                        <Link to='/colors'>\n                            <div className='iconColors hvr-pulse'></div>\n                        </Link>\n                    </div>\n                    <div className='col-md-3'>\n                        <Link to='/animals'>\n                            <div className='iconAnimals hvr-pulse'></div>\n                        </Link>\n                    </div>\n                    <div className='col-md-3'>\n                        <Link to='/planets'>\n                            <div className='iconPlanets hvr-pulse'></div>\n                        </Link>\n                    </div>\n                    <div className='col-md-3'>\n                        <Link to='/sightwords'>\n                            <div className='iconTime hvr-pulse'></div>\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default MainApp;\n","export default function(array) {\n    array.sort(() => Math.random() - 0.5);\n    return array;\n}","import React, { useState, useEffect } from 'react'\n\n\n\nexport const Letter = (props) => {\n    const [hidden, setHidden] = useState(false);\n    const [char, setChar] = useState(\"\");\n\n    useEffect(() => {\n        setHidden(props.hidden);\n        setChar(props.char);\n    }, [props.hidden, props.char]);\n\n    return (\n        <span>{hidden ? \"_\" : char}</span>\n    );\n}","import React from 'react'\nimport { Letter } from \"./Letter\"\n\nconst Word = (props) => {\n\n    let word = [];\n\n    for (let i = 0; i < props.word.length; i++) {\n        word.push(props.word.charAt(i));\n    }\n\n    console.log(word);\n    return (\n        <div className=\"item2\">\n        {word.map((letter, index) => <Letter \n            key={index} \n            hidden={index === props.hiddenLetterIndex}\n            char={letter} />)}\n        </div>\n\n    );\n    \n}\n\nexport default Word;","import Shuffle from './Shuffle'\n\nconst POOL = [\n\"MOUSE\",\n\"CHICKEN\",\n\"LIZARD\",\n\"WOLF\",\n\"FROG\",\n\"CAT\",\n\"DOG\",\n\"BEE\",\n\"PIG\",\n\"COW\",\n\"BAT\",\n\"BIRD\",\n\"LLAMA\",\n\"MONKEY\",\n\"FERRET\"\n]\n\nexport default {\n    index: 0,\n    words: Shuffle(POOL),\n    first() {return this.words[this.index = 0]},\n    next(word) {\n        let newWordIndex = Math.floor( Math.random() * 15 )\n        while (POOL[newWordIndex] === word) {\n            newWordIndex = Math.floor( Math.random() * 15 )\n        }\n        this.index = newWordIndex\n        return POOL[newWordIndex]\n    }\n}","import React from 'react'\n\nconst Picture = (props) => {\n    return (\n        <div className=\"item1\" >\n            <img className=\"word-picture\" src={`images/${props.word}.jpg`} alt=\"current-img\" height=\"100%\" width=\"100%\"/>\n        </div>\n    )\n}\n\nexport default Picture","import React, { useState, useEffect } from 'react'\n// import Shuffle from './Shuffle'\n\n\n// function to generate a correct or false button based on global state RNG\nconst generateButtonLetter = (buttonIndex, correctButtonIndex, hiddenLetterIndex, onClickEvent, word) => {\n    \n    word = word.toString()\n    const hiddenLetter = word.charAt(hiddenLetterIndex)\n    var randomLetter = String.fromCharCode(65+Math.floor(Math.random() * 26))\n    while (randomLetter === hiddenLetter) {\n        randomLetter = String.fromCharCode(65+Math.floor(Math.random() * 26))\n    }\n    \n    // if this happens to be the correct button, give it the correct letter and pass the onClick event\n    // otherwise, random non-correct letter and no onClick event\n    const buttonLetter = (buttonIndex === correctButtonIndex)\n     ? hiddenLetter : randomLetter\n    const buttonClickEvent = (buttonIndex === correctButtonIndex)\n    ? onClickEvent : null\n\n    return (<button className=\"choice-button\" onClick={buttonClickEvent}> {buttonLetter} </button>)\n}\n\nconst Button = (props) => {\n    const [hiddenLetterIndex, setHiddenLetterIndex] = useState(false);\n    const [word, setWord] = useState(false);\n    const [correctButtonIndex, setCorrectButtonIndex] = useState(false);\n\n    useEffect(() => {\n        setHiddenLetterIndex(props.hiddenLetterIndex)\n        setWord(props.word)\n        setCorrectButtonIndex(props.correctButtonIndex)\n    }, [props.hiddenLetterIndex, props.word, props.correctButtonIndex]);\n\n\n\n    return (\n        generateButtonLetter(props.buttonIndex, correctButtonIndex, hiddenLetterIndex, props.onClickEvent, word)\n    )\n}\n\nexport default Button\n","import React, { useContext, useState, useEffect } from 'react';\nimport '../../App.css';\nimport { Link } from 'react-router-dom';\nimport UserContext from '../../context/user/userContext'; //////\nimport Word from '../spellingComponents/Word'\nimport WordBank from '../spellingComponents/WordBank'\nimport Picture from '../spellingComponents/Picture'\nimport LetterButton from '../spellingComponents/LetterButtons'\nimport swal from 'sweetalert'\nimport '../spellingComponents/spellingApp.css'\n\nconst ABCApp = props => {\n    const [score, setScore] = useState(0)\n    const [word, setWord] = useState(WordBank.first())\n    const [hiddenLetterIndex, setHiddenLetterIndex] = useState(Math.floor(Math.random() * (WordBank.first()).length))\n    const [correctButtonIndex, setCorrectButtonIndex] = useState(Math.floor(Math.random() * 3))\n    const userContext = useContext(UserContext);\n    const { updateStars, user } = userContext;\n  \n    useEffect(() => {\n      setScore(score)\n      setWord(word)\n      setHiddenLetterIndex(hiddenLetterIndex)\n      setCorrectButtonIndex(correctButtonIndex)\n    }, [score, word, hiddenLetterIndex, correctButtonIndex])\n  \n      const correctGuess = () => {\n      // let { score } = this.state\n      // let { hiddenLetterIndex } = this.state\n      setScore(score + 1)\n      if (score > 10) {\n        swal(\"You won! You've earned the star for this game!\")\n        updateStars(user, 3)\n        // props.history.push(\"/\");\n        setTimeout(function() {\n          props.history.push(\"/\");\n        }, 1500);\n      }\n      console.log(score)\n      setWord(WordBank.next(word))\n      setCorrectButtonIndex(Math.floor(Math.random() * 3))\n      setHiddenLetterIndex(Math.floor(Math.random() * word.length))\n    \n      console.log(\"CORRECT GUESS\")\n    }\n  \n      // main render fuction \n      return (\n        <div className=\"banner\"> Fill in the missing letters in each word!\n        <div className=\"grid-container\">\n            <Link to='/'>\n                <div className='back-arrow'></div>\n            </Link>\n          <Picture word={word}/>\n          <Word word={word} hiddenLetterIndex={hiddenLetterIndex} />\n          <div className=\"item3\">\n          <LetterButton onClickEvent={correctGuess} buttonIndex={0} correctButtonIndex={correctButtonIndex} hiddenLetterIndex={hiddenLetterIndex} word={word}/>\n          <LetterButton onClickEvent={correctGuess} buttonIndex={1} correctButtonIndex={correctButtonIndex} hiddenLetterIndex={hiddenLetterIndex} word={word}/>\n          <LetterButton onClickEvent={correctGuess} buttonIndex={2} correctButtonIndex={correctButtonIndex} hiddenLetterIndex={hiddenLetterIndex} word={word}/> \n          </div>\n        </div>\n        </div>\n      )\n    }\n  \n    export default ABCApp;\n\n\n\n// function ABCApp() {\n//     const userContext = useContext(UserContext); //////\n\n//     const { updateStars, user } = userContext; //////\n\n//     const put = () => {\n//         /* THIS IS FOR TESTING UPDATE STARS */\n//         updateStars(user, 2);\n//     };\n\n//     return (\n//         <div>\n//             <h1>ABC App</h1>\n//             <Link to='/'>\n//                 <div className='back-arrow'></div>\n//             </Link>\n//             <button onClick={put}></button>\n//         </div>\n//     );\n// }\n\n// export default ABCApp;\n","import React from 'react';\nimport '../../App.css';\nimport { Link } from 'react-router-dom';\n\nfunction AnimalApp() {\n    return (\n        <div>\n            <h1>Animal App</h1>\n            <Link to='/'>\n                <div className='back-arrow'></div>\n            </Link>\n        </div>\n    );\n}\n\nexport default AnimalApp;\n","import React, { useContext} from \"react\";\nimport \"../../App.css\";\nimport { Link } from \"react-router-dom\";\nimport swal from \"sweetalert\";\n\nimport UserContext from '../../context/user/userContext';\n\n\nvar wordBank = [\n  \"all\",\n  \"at\",\n  \"ate\",\n  \"be\",\n  \"black\",\n  \"brown\",\n  \"came\",\n  \"did\",\n  \"eat\",\n  \"four\",\n  \"get\",\n  \"good\",\n  \"he\",\n  \"like\",\n  \"new\",\n  \"no\",\n  \"now\",\n  \"on\",\n  \"out\",\n  \"please\",\n  \"pretty\",\n  \"ran\",\n  \"ride\",\n  \"saw\",\n  \"say\",\n  \"she\",\n  \"so\",\n  \"soon\",\n  \"that\",\n  \"there\",\n  \"they\",\n  \"this\",\n  \"too\",\n  \"under\",\n  \"want\",\n  \"was\",\n  \"well\",\n  \"went\",\n  \"what\",\n  \"white\",\n  \"will\",\n  \"with\",\n  \"yes\"\n];\nvar chosenWordArr = [];\nvar pickedWord;\nvar currentAudioURL;\nvar score = 0;\nconst correct = new Audio(\n  \"https://ssl.gstatic.com/dictionary/static/sounds/oxford/correct--_us_1.mp3\"\n);\nconst incorrect = new Audio(\n  \"https://ssl.gstatic.com/dictionary/static/sounds/oxford/incorrect--_us_1.mp3\"\n);\n\n\nfunction SightWordApp(props) {\n    const userContext = useContext(UserContext);\n\n    const { isAuthenticated, logout, updateStars, user } = userContext;\n\n\n    function chooseRandomWords() {\n        score = 0;\n        chosenWordArr = [];\n        for (var i = 0; i < 200; i++) {\n          var rand = wordBank[Math.floor(Math.random() * wordBank.length)];\n          var n = chosenWordArr.includes(rand);\n          if (n === true) {\n            console.log(\"contains duplicates\");\n          }\n          //only push value to new array if not a duplicate\n          else {\n            // console.log(\"no duplicates\");\n            chosenWordArr.push(rand);\n          }\n          if (chosenWordArr.length === 20) {\n            console.log(chosenWordArr);\n            pickedWord =\n              chosenWordArr[Math.floor(Math.random() * chosenWordArr.length)];\n            console.log(pickedWord);\n            currentAudioURL =\n              \"https://ssl.gstatic.com/dictionary/static/sounds/oxford/\" +\n              pickedWord +\n              \"--_us_1.mp3\";\n            console.log(currentAudioURL);\n      \n            return;\n          }\n        }\n      }\n      \n      \n      \n      function cycle() {\n        pickedWord = chosenWordArr[Math.floor(Math.random() * chosenWordArr.length)];\n        console.log(\"Newly Picked Word: \" + pickedWord);\n        currentAudioURL =\n          \"https://ssl.gstatic.com/dictionary/static/sounds/oxford/\" +\n          pickedWord +\n          \"--_us_1.mp3\";\n        if (score === 10) {\n          swal(\"You got 10 Correct!\", \"You Win!\", \"success\");\n          updateStars(user, 3)\n        // props.history.push(\"/\");\n        setTimeout(function() {\n          props.history.push(\"/\");\n        }, 1500);\n          \n          return;\n        }\n      }\n      \n      function playAudio() {\n        let audio = new Audio(currentAudioURL);\n        audio.setAttribute(\"autoplay\", \"true\");\n        audio.setAttribute(\"muted\", \"muted\");\n        audio.load();\n        audio.play();\n      \n        if (score === 10) {\n          audio.pause();\n        }\n      }\n      function wordClick(e) {\n        let clickedWord = e.target.innerText;\n        console.log(clickedWord);\n        if (clickedWord === pickedWord) {\n          correct.play();\n          setTimeout(function() {\n            playAudio();\n          }, 1500);\n          score++;\n          console.log(\"Score: \" + score);\n          cycle();\n        } else {\n          incorrect.play();\n          setTimeout(function() {\n            playAudio();\n          }, 1500);\n        }\n      }\n    \n  return (\n    <div>\n      <br />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-2\">\n            <Link to=\"/\">\n              <div className=\"back-arrow\"></div>\n            </Link>\n          </div>\n          <div className=\"col-md-10\"></div>\n        </div>\n      </div>\n\n      <h3 onLoad={chooseRandomWords()}>Listen to the Word</h3>\n      <button onClick={() => playAudio()} className=\"audio-btn1\">\n        {\" \"}\n        <img\n          src=\"https://www.searchpng.com/wp-content/uploads/2019/02/Audio-Button-PNG-715x735.png\"\n          alt=\"play audio\"\n          className=\"audio-btn2\"\n        />{\" \"}\n      </button>\n\n      <div className=\"container\" onLoad={playAudio(currentAudioURL)}>\n        <div className=\"row\">\n          {chosenWordArr.map(word => (\n            <div className=\"col-md-3 word-bg\">\n              <p className=\"word-inside\" key={word} onClick={wordClick}>\n                {word}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default SightWordApp;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport \"../../App.css\";\nimport { Link } from \"react-router-dom\";\nimport cards from \"./colors.json\";\nimport swal from \"sweetalert\";\nimport UserContext from '../../context/user/userContext';\n\nconst correct = new Audio(\n  \"https://ssl.gstatic.com/dictionary/static/sounds/oxford/correct--_us_1.mp3\"\n);\nconst incorrect = new Audio(\n  \"https://ssl.gstatic.com/dictionary/static/sounds/oxford/incorrect--_us_1.mp3\"\n);\n\nfunction randomizeOrder() {\n\n\n    cards.sort(() => Math.random() - 0.5);\n  \n  }\n\nfunction ColorApp(props) {\n  const [item, setItem] = useState(0);\n  const [randColor, setRandColor] = useState();\n  const [randId, setRandId] = useState();\n  const [randAudio, setRandAudio] = useState();\n\n  const userContext = useContext(UserContext);\n\n  const { isAuthenticated, logout, updateStars, user } = userContext;\n\n  function playAudio(audioNum = item) {\n    console.log(randAudio);\n    console.log(\"PLAYING AUDIO\");\n    let audio = new Audio(cards[audioNum].audio);\n\n    audio.setAttribute(\"autoplay\", \"true\");\n    audio.setAttribute(\"muted\", \"muted\");\n\n    audio.load();\n    audio.play();\n  }\n\n  useEffect(() => {\n    randomizeOrder();\n    setRandId(cards[item].id);\n    setRandColor(cards[item].name);\n    setRandAudio(cards[item].audio);\n\n    if (item === 0) {\n      playAudio(0);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [item]);\n\n  function colorClick(e) {\n    let clickedColorId = e.target.id;\n\n    // eslint-disable-next-line\n    if (clickedColorId == randId) {\n      correct.play();\n\n      let newItem = item < 8 ? item + 1 : 0;\n\n      if (item === 8) {\n        swal(\"You got them all Correct!\", \"You Win!\", \"success\");\n        updateStars(user, 3)\n        // props.history.push(\"/\");\n        setTimeout(function() {\n          props.history.push(\"/\");\n        }, 1500);\n        return;\n      }\n\n      setItem(newItem);\n      setTimeout(function() {\n        playAudio(newItem);\n      }, 1500);\n    } else {\n      incorrect.play();\n      setTimeout(function() {\n        playAudio();\n      }, 1500);\n    }\n  }\n\n  return (\n    <div>\n      <br />\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <Link to=\"/\">\n              <div className=\"back-arrow\" onClick={() => setItem(0)}></div>\n            </Link>\n          </div>\n          <div className=\"col-md-4\">\n            <div className=\"color-title\">\n              <h1>{randColor}</h1>\n            </div>\n          </div>\n          <div className=\"col-md-4\"></div>\n        </div>\n      </div>\n\n      <button onClick={() => playAudio()} className=\"audio-btn1\">\n        {\" \"}\n        <img\n          src=\"https://www.searchpng.com/wp-content/uploads/2019/02/Audio-Button-PNG-715x735.png\"\n          alt=\"play audio\"\n          className=\"audio-btn2\"\n        />{\" \"}\n      </button>\n\n      <div className=\"container color-row\">\n        <div className=\"row\">\n          {cards.map(card => (\n            <div className=\"box9\" key={card.id}>\n              <div className=\"col-md-2\" key={card.id}>\n                <img\n                  className=\"color\"\n                  src={card.image}\n                  alt={card.name}\n                  id={card.id}\n                  onClick={colorClick}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ColorApp;\n","import React from 'react';\nimport '../../App.css';\nimport { Link } from 'react-router-dom';\nimport '../../Math.css';\n\nfunction MathApp() {\n    return (\n        <div>\n            <h1>Math App</h1>\n            <Link to='/'>\n                <div className='back-arrow'></div>\n            </Link>\n                    <div class=\"timerWrapper\">\n            <div class=\"timer\">Score: 0</div>\n            </div>\n            <div class=\"boxWrapper\">\n            <div class=\"mathWrapper\">\n                <div class=\"box box1\">Easy</div>\n                <div class=\"middleBox operator\"> + </div>\n                <div class=\"box box2\">Medium</div>\n                <div class=\"middleBox equal\"> = </div>\n                <div class=\"box box3\">Hard</div>\n            </div>\n            </div>\n            <div class=\"decisionWrapper\">\n            <div class=\"box answer first\"></div>\n            <div class=\"box answer second\"></div>\n            <div class=\"box answer third\"></div>\n            </div>\n        </div>\n    );\n}\n\nexport default MathApp;\n","import React from 'react';\nimport '../../App.css';\nimport { Link } from 'react-router-dom';\n\nfunction NumApp() {\n    return (\n        <div>\n            <h1>Number App</h1>\n            <Link to='/'>\n                <div className='back-arrow'></div>\n            </Link>\n        </div>\n    );\n}\n\nexport default NumApp;\n","import React from 'react'\n\nconst Picture = (props) => {\n    return (\n        <div className=\"item1\" >\n            {/* <img className=\"planet-picture\" src={`images/${props.planet}.jpg`} alt=\"current-img\" height=\"100%\" width=\"100%\"/> */}\n            <img className=\"planet-picture\" src={`images/${props.planet}.jpg`} alt=\"current-img\" height=\"100%\" width=\"100%\"/>\n        </div>\n    )\n}\n\nexport default Picture","import Shuffle from './Shuffle'\n\nconst POOL = [\n\"MERCURY\",\n\"VENUS\",\n\"EARTH\",\n\"MARS\",\n\"JUPITER\",\n\"SATURN\",\n\"URANUS\",\n\"NEPTUNE\",\n]\n\n\n\nexport default {\n    index: 0,\n    planets: Shuffle(POOL),\n    first() {return this.planets[this.index = 0]},\n    // next() {return this.planets[this.index = (this.index + 1) % this.planets.length]}\n    next(planet) {\n        \n        let newPlanetIndex = Math.floor( Math.random() * 8 )\n        while( POOL[newPlanetIndex] === planet){\n            newPlanetIndex = Math.floor( Math.random() * 8 )\n        }\n\n        this.index = newPlanetIndex\n        return POOL[newPlanetIndex]\n    },\n}","export default function(array) {\n    array.sort(() => Math.random() - 0.5);\n    return array;\n}","import React from 'react'\n\n// function to generate a correct or false button based on global state RNG\nconst generatePlanetButton = (buttonIndex, correctButtonIndex, planet, onClickEvent) => {\n    const POOL = [\n        \"MERCURY\", \"VENUS\", \"EARTH\", \"MARS\", \"JUPITER\",\n        \"SATURN\", \"URANUS\", \"NEPTUNE\",\n        ]\n\n    var randomPlanet = POOL[Math.floor(Math.random() * 2)]\n    while (randomPlanet === planet) {\n        randomPlanet = POOL[Math.floor(Math.random() * 2)]\n    }\n\n    // if this is the correct button index, give it the correct planet name\n    // and pass the onClick event, otherwise random planet and no click event\n    const buttonPlanet = (buttonIndex === correctButtonIndex)\n    ?   planet : randomPlanet\n    const buttonClickEvent = (buttonIndex === correctButtonIndex)\n    ? onClickEvent : function(){\n        console.log('wrong answer')\n    }\n    \n    return (<button className=\"choice-button\" onClick={buttonClickEvent}> {buttonPlanet}</button>)\n}\n\nconst PlanetButton = (props) => {\n    // const [planet, setPlanet] = useState(false);\n    // const [correctButtonIndex, setCorrectButtonIndex] = useState(false);\n\n    // useEffect(() => {\n    //     setPlanet(props.planet)\n    //     setCorrectButtonIndex(props.correctButtonIndex)\n    // }, [props.planet, props.correctButtonIndex]);\n\n    return (\n        generatePlanetButton(props.buttonIndex, props.correctButtonIndex, props.planet, props.onClickEvent)\n    )\n}\n\nexport default PlanetButton","import React, { useState, useEffect, useContext } from 'react'\nimport '../../App.css';\nimport { Link } from 'react-router-dom';\nimport Picture from '../planetComponents/Picture'\nimport PlanetBank from '../planetComponents/PlanetBank'\nimport PlanetButton from '../planetComponents/PlanetButton'\nimport swal from 'sweetalert';\nimport UserContext from '../../context/user/userContext';\n\nconst PlanetApp = props => {\n\n    const [score, setScore] = useState(0)\n    const [planet, setPlanet] = useState(PlanetBank.first())\n    const [correctButtonIndex, setCorrectButtonIndex] = useState(Math.floor(Math.random() * 2))\n    const userContext = useContext(UserContext);\n\n    const { updateStars, user } = userContext;\n\n    useEffect(() => {\n      setScore(score)\n      setPlanet(planet)\n      setCorrectButtonIndex(correctButtonIndex)\n  }, [score, planet, correctButtonIndex]);\n  \n    const correctGuess = () => {\n      setScore(score + 1);\n      if (score >= 7) {\n        updateStars(user, 3)\n        // props.history.push(\"/\");\n        setTimeout(function() {\n          props.history.push(\"/\");\n        }, 1500);\n        swal(\"You won! You've earned the star for this game!\")\n        }\n      \n      console.log(score)\n      // const planet = PlanetBank.next()\n      // const correctButtonIndex = Math.floor(Math.random() * 2)\n  \n      console.log(PlanetBank.next())\n      setPlanet(PlanetBank.next(planet))\n      setCorrectButtonIndex(Math.floor(Math.random() * 2))\n      console.log(\"CORRECT GUESS\")\n    }\n  \n          return (\n            <div className=\"banner\"> Can you guess the planet based on the picture?\n            <Link to='/'>\n            <div className='back-arrow'></div>\n            </Link>\n            <div className=\"grid-container\">\n              <Picture planet={planet}/>\n              <div className=\"item2\">\n                <PlanetButton onClickEvent={correctGuess} buttonIndex={0} correctButtonIndex={correctButtonIndex} planet={planet} />\n                <PlanetButton onClickEvent={correctGuess} buttonIndex={1} correctButtonIndex={correctButtonIndex} planet={planet} />\n              </div>\n            </div>\n            </div>\n          )\n  \n  }\n  \n  export default PlanetApp;\n  \n\n\n\n// function PlanetApp() {\n//     return (\n//         <div>\n//             <h1>Planet App</h1>\n//             <Link to='/'>\n//                 <div className='back-arrow'></div>\n//             </Link>\n//         </div>\n//     );\n// }\n\n// export default PlanetApp;\n\n\n{/* <Link to='/'>\n<div className='back-arrow'></div>\n</Link> */}","import React, { useState, useEffect, useContext } from 'react';\nimport '../../App.css';\nimport { Link } from 'react-router-dom';\nimport cards from './cards.json';\nimport swal from 'sweetalert';\nimport UserContext from '../../context/user/userContext';\nconst correct = new Audio(\n    'https://ssl.gstatic.com/dictionary/static/sounds/oxford/correct--_us_1.mp3'\n);\nconst incorrect = new Audio(\n    'https://ssl.gstatic.com/dictionary/static/sounds/oxford/incorrect--_us_1.mp3'\n);\nfunction randomizeOrder() {\n    cards.sort(() => Math.random() - 0.5);\n}\nfunction ShapeApp(props) {\n    const [item, setItem] = useState(0);\n    const [randShape, setRandShape] = useState();\n    const [randId, setRandId] = useState();\n    const [randAudio, setRandAudio] = useState();\n    const userContext = useContext(UserContext);\n    const { isAuthenticated, logout, updateStars, user } = userContext;\n    function playAudio(audioNum = item) {\n        console.log(randAudio);\n        console.log('PLAYING AUDIO');\n        let audio = new Audio(cards[audioNum].audio);\n        audio.setAttribute('autoplay', 'true');\n        audio.setAttribute('muted', 'muted');\n        audio.load();\n        audio.play();\n    }\n    useEffect(() => {\n        randomizeOrder();\n        setRandId(cards[item].id);\n        setRandShape(cards[item].name);\n        setRandAudio(cards[item].audio);\n        if (item === 0) {\n            playAudio(0);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [item]);\n    function shapeClick(e) {\n        let clickedShapeId = e.target.id;\n        // eslint-disable-next-line\n        if (clickedShapeId == randId) {\n            correct.play();\n            let newItem = item < 7 ? item + 1 : 0;\n            if (item === 7) {\n                swal('You got them all Correct!', 'You Win!', 'success');\n                updateStars(user, 3);\n                // props.history.push(\"/\");\n                setTimeout(function() {\n                    props.history.push('/');\n                }, 1500);\n                return;\n            }\n            setItem(newItem);\n            setTimeout(function() {\n                playAudio(newItem);\n            }, 1500);\n        } else {\n            incorrect.play();\n            setTimeout(function() {\n                playAudio();\n            }, 1500);\n        }\n    }\n    return (\n        <div>\n            <br />\n            <div className='container'>\n                <div className='row'>\n                    <div className='col-md-4'>\n                        <Link to='/'>\n                            <div\n                                className='back-arrow'\n                                onClick={() => setItem(0)}\n                            ></div>\n                        </Link>\n                    </div>\n                    <div className='col-md-4'>\n                        <div className='shape-title'>\n                            <h1>{randShape}</h1>\n                        </div>\n                    </div>\n                    <div className='col-md-4'></div>\n                </div>\n            </div>\n            <button onClick={() => playAudio()} className='audio-btn1'>\n                {' '}\n                <img\n                    src='https://www.searchpng.com/wp-content/uploads/2019/02/Audio-Button-PNG-715x735.png'\n                    alt='play audio'\n                    className='audio-btn2'\n                />{' '}\n            </button>\n            <div className='container shape-row'>\n                <div className='row'>\n                    {cards.map(card => (\n                        <div className='box9' key={card.id}>\n                            <div className='col-md-3' key={card.id}>\n                                <img\n                                    className='shape'\n                                    src={card.image}\n                                    alt={card.name}\n                                    id={card.id}\n                                    onClick={shapeClick}\n                                />\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default ShapeApp;","// Function to decide what happens to state based on an action.\n\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    GET_USER,\n    USER_LOADED,\n    AUTH_ERROR,\n    CLEAR_ERRORS,\n    UPDATE_STARS,\n    STARS_ERROR\n} from '../types';\n\n// UserState dispaches actions here, ad depending on the TYPE it does something, maybe with a payload...\nexport default (state, action) => {\n    switch (action.type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: action.payload\n            };\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token); // saving the token to headings\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case REGISTER_FAIL: // both these cases do the same thing\n        case AUTH_ERROR: // both these cases do the same thing\n            localStorage.removeItem('token'); // removing any tokens from storage\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null,\n                error: action.payload // setting error in the payload to the one in msg in users.js\n            };\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token'); // removing any tokens from storage\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null,\n                error: action.payload // setting error in the payload to the one in msg in users.js\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            };\n        case GET_USER:\n            return {\n                ...state,\n                user: action.payload,\n                loading: false\n            };\n        case UPDATE_STARS:\n            return {\n                ...state,\n                loading: false\n            };\n        case STARS_ERROR:\n        default:\n            return state;\n    }\n};\n","// types are variables of strings that can be called to change state within the reducer.\n\n// there are the types needed for this application\nexport const GET_USER = 'GET_USER';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\nexport const UPDATE_STARS = 'UPDATE_STARS';\nexport const STARS_ERROR = 'STARS_ERROR';\n","// Initial state and all of our actions will go here, such as fetching data etc.\n//▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport UserContext from './userContext';\nimport UserReducer from './userReducer';\nimport setAuthToken from '../../utils/setAuthToken'; // needed to set the token so it is avaiable elsewhere\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    USER_LOADED,\n    AUTH_ERROR,\n    CLEAR_ERRORS,\n    UPDATE_STARS,\n    STARS_ERROR\n} from '../types';\n\nconst UserState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'), // token will be updated in local storage\n        isAuthenticated: false,\n        loading: false, // for if we want to display a loader icon on true\n        user: {},\n        error: null // initial value of error is null, but will be updated and displayed manually when something goes wrong to let the user know\n    };\n\n    const [state, dispatch] = useReducer(UserReducer, initialState);\n\n    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n    // LOAD_USER: this will get all the data for the user and place it in state whenever we need\n    const loadUser = async () => {\n        if (localStorage.token) {\n            setAuthToken(localStorage.token);\n\n            const res = await axios.get('/api/auth');\n            dispatch({ type: USER_LOADED, payload: res.data });\n        } else {\n            dispatch({ type: AUTH_ERROR });\n        }\n    };\n\n    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n    // REGISTER_USER:\n    const register = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        try {\n            const res = await axios.post('/api/users', formData, config);\n\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data // token signed in users.js\n            });\n\n            loadUser(); // loading user when they register so they don't have to then log in (basically logging in for them)\n        } catch (err) {\n            dispatch({\n                type: REGISTER_FAIL,\n                payload: err.response.data.msg // this is from users.js error\n            });\n        }\n    };\n\n    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n    // LOGIN_USER:\n    const login = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n        try {\n            const res = await axios.post('/api/auth', formData, config);\n\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data // token signed in users.js\n            });\n\n            loadUser(); // load user when they login\n        } catch (err) {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data.msg // this is from users.js error\n            });\n        }\n    };\n\n    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n    // LOGOUT_USER:\n    const logout = () => dispatch({ type: LOGOUT });\n\n    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n    // CLEAR_ERRORS:\n    const clearErrors = () => dispatch({ type: CLEAR_ERRORS });\n\n    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n    // UPDATE_STARS:\n    const updateStars = async (user, count) => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        };\n\n        user.stars = user.stars + count;\n\n        try {\n            const res = await axios.put(`/api/stars/${user._id}`, user, config);\n\n            dispatch({ type: UPDATE_STARS, payload: res.data });\n        } catch (err) {\n            dispatch({ type: STARS_ERROR, payload: err.response.msg });\n        }\n    };\n\n    return (\n        <UserContext.Provider\n            value={{\n                // EVERYTHING WE NEED AVAILABE MUST BE HERE\n                token: state.token,\n                isAuthenticated: state.isAuthenticated,\n                loading: state.loading,\n                user: state.user,\n                error: state.error,\n                register,\n                loadUser,\n                login,\n                logout,\n                clearErrors,\n                updateStars\n            }}\n        >\n            {props.children}\n        </UserContext.Provider>\n    );\n};\n\nexport default UserState;\n\n//▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n// SEARCH_USERS: Fetch an array of objects from the GitHub API that are users that fit the user query\n/*     \n    const searchUsers = async search => {\n        setLoading();\n\n        const res = await axios.get(\n            `https://api.github.com/search/users?q=${search}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n        );\n        console.log(res.data.items);\n\n        dispatch({\n            type: SEARCH_USERS,\n            payload: res.data.items\n        });\n    };\n*/\n//▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n// GET_REPOS: Get a single users repositories\n/*     \n    const getUserRepos = async username => {\n        setLoading();\n\n        const res = await axios.get(\n            `https://api.github.com/users/${username}/repos?per_page=100&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n        );\n        console.log(res.data);\n\n        dispatch({ type: GET_REPOS, payload: res.data });\n    };\n*/\n//▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n// Clear users from state\n/*     \n    const clearUsers = () => dispatch({ type: CLEAR_USERS });\n*/\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case SET_ALERT:\n            return [...state, action.payload];\n        case REMOVE_ALERT:\n            return state.filter(alert => alert.id !== action.payload);\n        default:\n            return state;\n    }\n};\n","// Alert state will go here\n//▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n\nimport React, { useReducer } from 'react';\nimport uuid from 'uuid';\nimport AlertContext from './alertContext';\nimport alertReducer from './alertReducer';\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\n\nconst AlertState = props => {\n    const initialState = [];\n\n    const [state, dispatch] = useReducer(alertReducer, initialState);\n\n    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n    // SET_ALERT:\n    const setAlert = (msg, type, timeout = 5000) => {\n        const id = uuid.v4();\n        dispatch({ type: SET_ALERT, payload: { msg, type, id } });\n\n        setTimeout(\n            () => dispatch({ type: REMOVE_ALERT, payload: id }),\n            timeout // this is set to the timeout of 5000, but can be changed depending on the alert you want\n        );\n    };\n\n    //▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓\n    // REGISTER_USER:\n\n    return (\n        <AlertContext.Provider\n            value={{\n                // EVERYTHING WE NEED AVAILABE MUST BE HERE\n                alerts: state, // just set to state because our entire state is the array of alerts\n                setAlert\n            }}\n        >\n            {props.children}\n        </AlertContext.Provider>\n    );\n};\n\nexport default AlertState;\n","import React, { useState } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport setAuthToken from './utils/setAuthToken';\n\n// layout\nimport Nav from './components/layout/Nav';\nimport Alerts from './components/layout/Alerts';\n\n// pages\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport MainApp from './components/MainApp';\n\n// game modules\nimport ABCApp from './components/gameModules/ABCApp';\nimport AnimalApp from './components/gameModules/AnimalApp';\nimport ClockApp from './components/gameModules/ClockApp';\nimport ColorApp from './components/gameModules/ColorApp';\nimport MathApp from './components/gameModules/MathApp';\nimport NumApp from './components/gameModules/NumApp';\nimport PlanetApp from './components/gameModules/PlanetApp';\nimport ShapeApp from './components/gameModules/ShapeApp';\n\n// context\nimport UserState from './context/user/UserState';\nimport AlertState from './context/alert/AlertState';\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n} // saving the users token to local storage\n\nfunction App() {\n    \n    return (\n        <UserState>\n            <AlertState>\n                <Router>\n                    <div className='App'>\n                        <Nav />\n                        <div className='container'>\n                            <Alerts />\n                            <Preload/>\n                            <Switch>\n                                <Route path='/' exact component={MainApp} />\n                                <Route path='/register' component={Register} />\n                                <Route path='/login' component={Login} />\n                                {/* <Route path='/mainapp' component={MainApp} /> */}\n\n                                <Route path='/abc' component={ABCApp} />\n                                <Route path='/animals' component={AnimalApp} />\n                                <Route path='/sightwords' component={ClockApp} />\n                                <Route path='/colors' component={ColorApp} />\n                                <Route path='/math' component={MathApp} />\n                                <Route path='/numbers' component={NumApp} />\n                                <Route path='/planets' component={PlanetApp} />\n                                <Route path='/shapes' component={ShapeApp} />\n                               \n                            </Switch>\n                        </div>\n                    </div>\n                </Router>\n            </AlertState>\n        </UserState>\n    );\n}\n\n// const Home = () => (\n//     <div>\n//         <h1>Home Page!</h1>\n\n//         <div className=\"container\">\n//             <div className=\"row\">\n//                 <div className=\"col-md-1\"></div>\n//                 <div className=\"col-md-4 register-login\"><Link to='/register'>\n//             <h3 className=\"white\">Register</h3>\n//         </Link></div>\n//         <div className=\"col-md-2\"></div>\n//                 <div className=\"col-md-4 register-login\"><Link to='/login'>\n//             <h3 className=\"white\">Login</h3>\n//         </Link></div>\n//                 <div className=\"col-md-1\"></div>\n//             </div>\n//         </div>\n        \n\n        \n        \n//     </div>\n// );\n\nconst Preload = () => (\n    <section className=\"wrapper\">\n  <div className=\"spinner\">\n    <i></i>\n    <i></i>\n    <i></i>\n    <i></i>\n    <i></i>\n    <i></i>\n    <i></i>\n  </div>\n  <h1 className=\"spin-title\">Welcome to Star Jump!</h1>\n</section>\n\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}