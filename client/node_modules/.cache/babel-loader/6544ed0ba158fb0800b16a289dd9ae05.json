{"ast":null,"code":"import _objectSpread from \"/Users/thomasnelson/Desktop/Assignments/Group Project 3/project3/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// Function to decide what happens to state based on an action.\nimport { REGISTER_SUCCESS, REGISTER_FAIL, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, GET_USER, SET_LOADING, USER_LOADED, AUTH_ERROR, CLEAR_ERRORS, UPDATE_STARS } from '../types'; // UserState dispaches actions here, ad depending on the TYPE it does something, maybe with a payload...\n\nexport default ((state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return _objectSpread({}, state, {\n        isAuthenticated: true,\n        loading: false,\n        user: action.payload\n      });\n\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      localStorage.setItem('token', action.payload.token); // saving the token to headings\n\n      return _objectSpread({}, state, {}, action.payload, {\n        isAuthenticated: true,\n        loading: false\n      });\n\n    case REGISTER_FAIL: // both these cases do the same thing\n\n    case AUTH_ERROR: // both these cases do the same thing\n\n    case LOGIN_FAIL:\n    case LOGOUT:\n      localStorage.removeItem('token'); // removing any tokens from storage\n\n      return _objectSpread({}, state, {\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null,\n        error: action.payload // setting error in the payload to the one in msg in users.js\n\n      });\n\n    case CLEAR_ERRORS:\n      return _objectSpread({}, state, {\n        error: null\n      });\n\n    case GET_USER:\n      return _objectSpread({}, state, {\n        user: action.payload,\n        loading: false\n      });\n\n    case SET_LOADING:\n      return _objectSpread({}, state, {\n        loading: true\n      });\n\n    case UPDATE_STARS:\n      return _objectSpread({}, state, {\n        loading: false\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Group Project 3/project3/client/src/context/user/userReducer.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","GET_USER","SET_LOADING","USER_LOADED","AUTH_ERROR","CLEAR_ERRORS","UPDATE_STARS","state","action","type","isAuthenticated","loading","user","payload","localStorage","setItem","token","removeItem","error"],"mappings":";AAAA;AAEA,SACIA,gBADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,UAJJ,EAKIC,MALJ,EAMIC,QANJ,EAOIC,WAPJ,EAQIC,WARJ,EASIC,UATJ,EAUIC,YAVJ,EAWIC,YAXJ,QAYO,UAZP,C,CAcA;;AACA,gBAAe,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC9B,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,WAAL;AACI,+BACOI,KADP;AAEIG,QAAAA,eAAe,EAAE,IAFrB;AAGIC,QAAAA,OAAO,EAAE,KAHb;AAIIC,QAAAA,IAAI,EAAEJ,MAAM,CAACK;AAJjB;;AAMJ,SAAKjB,gBAAL;AACA,SAAKE,aAAL;AACIgB,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,MAAM,CAACK,OAAP,CAAeG,KAA7C,EADJ,CACyD;;AACrD,+BACOT,KADP,MAEOC,MAAM,CAACK,OAFd;AAGIH,QAAAA,eAAe,EAAE,IAHrB;AAIIC,QAAAA,OAAO,EAAE;AAJb;;AAMJ,SAAKd,aAAL,CAjBJ,CAiBwB;;AACpB,SAAKO,UAAL,CAlBJ,CAkBqB;;AACjB,SAAKL,UAAL;AACA,SAAKC,MAAL;AACIc,MAAAA,YAAY,CAACG,UAAb,CAAwB,OAAxB,EADJ,CACsC;;AAClC,+BACOV,KADP;AAEIS,QAAAA,KAAK,EAAE,IAFX;AAGIN,QAAAA,eAAe,EAAE,KAHrB;AAIIC,QAAAA,OAAO,EAAE,KAJb;AAKIC,QAAAA,IAAI,EAAE,IALV;AAMIM,QAAAA,KAAK,EAAEV,MAAM,CAACK,OANlB,CAM0B;;AAN1B;;AAQJ,SAAKR,YAAL;AACI,+BACOE,KADP;AAEIW,QAAAA,KAAK,EAAE;AAFX;;AAIJ,SAAKjB,QAAL;AACI,+BACOM,KADP;AAEIK,QAAAA,IAAI,EAAEJ,MAAM,CAACK,OAFjB;AAGIF,QAAAA,OAAO,EAAE;AAHb;;AAKJ,SAAKT,WAAL;AACI,+BACOK,KADP;AAEII,QAAAA,OAAO,EAAE;AAFb;;AAIJ,SAAKL,YAAL;AACI,+BACOC,KADP;AAEII,QAAAA,OAAO,EAAE;AAFb;;AAIJ;AACI,aAAOJ,KAAP;AApDR;AAsDH,CAvDD","sourcesContent":["// Function to decide what happens to state based on an action.\n\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    GET_USER,\n    SET_LOADING,\n    USER_LOADED,\n    AUTH_ERROR,\n    CLEAR_ERRORS,\n    UPDATE_STARS\n} from '../types';\n\n// UserState dispaches actions here, ad depending on the TYPE it does something, maybe with a payload...\nexport default (state, action) => {\n    switch (action.type) {\n        case USER_LOADED:\n            return {\n                ...state,\n                isAuthenticated: true,\n                loading: false,\n                user: action.payload\n            };\n        case REGISTER_SUCCESS:\n        case LOGIN_SUCCESS:\n            localStorage.setItem('token', action.payload.token); // saving the token to headings\n            return {\n                ...state,\n                ...action.payload,\n                isAuthenticated: true,\n                loading: false\n            };\n        case REGISTER_FAIL: // both these cases do the same thing\n        case AUTH_ERROR: // both these cases do the same thing\n        case LOGIN_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('token'); // removing any tokens from storage\n            return {\n                ...state,\n                token: null,\n                isAuthenticated: false,\n                loading: false,\n                user: null,\n                error: action.payload // setting error in the payload to the one in msg in users.js\n            };\n        case CLEAR_ERRORS:\n            return {\n                ...state,\n                error: null\n            };\n        case GET_USER:\n            return {\n                ...state,\n                user: action.payload,\n                loading: false\n            };\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        case UPDATE_STARS:\n            return {\n                ...state,\n                loading: false\n            };\n        default:\n            return state;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}