{"ast":null,"code":"import _objectSpread from \"/Users/thomasnelson/Desktop/Assignments/Group Project 3/project3/client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/thomasnelson/Desktop/Assignments/Group Project 3/project3/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/thomasnelson/Desktop/Assignments/Group Project 3/project3/client/src/components/auth/Login.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../../context/user/userContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Login = props => {\n  const userContext = useContext(UserContext);\n  const login = userContext.login,\n        error = userContext.error,\n        clearErrors = userContext.clearErrors,\n        isAuthenticated = userContext.isAuthenticated;\n  const alertContext = useContext(AlertContext);\n  const setAlert = alertContext.setAlert;\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push('/mainapp');\n    }\n\n    if (error === 'Invalid Credentials') {\n      // setting the error value in state\n      setAlert(error, 'danger'); // calling set alert with the previously set error value\n\n      clearErrors(); // setting error value back to null\n    } // eslint-disable-next-line\n\n  }, [error, isAuthenticated, props.history]);\n\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const email = user.email,\n        password = user.password;\n\n  const onChange = e => setUser(_objectSpread({}, user, {\n    [e.target.name]: e.target.value\n  }));\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    if (email === '' || password === '') {\n      setAlert('Please fill in all fields', 'danger');\n    } else {\n      login({\n        email,\n        password\n      });\n    }\n  };\n\n  return React.createElement(\"div\", {\n    className: \"container w-50 p-3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Account \", React.createElement(\"span\", {\n    className: \"text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Login\")), React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"form-group  text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"email\",\n    value: email,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"form-group  text-left\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"password\",\n    value: password,\n    onChange: onChange,\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Login\",\n    className: \"btn btn-primary btn-block\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })));\n};\n\nexport default Login;","map":{"version":3,"sources":["/Users/thomasnelson/Desktop/Assignments/Group Project 3/project3/client/src/components/auth/Login.js"],"names":["React","useState","useContext","useEffect","UserContext","AlertContext","Login","props","userContext","login","error","clearErrors","isAuthenticated","alertContext","setAlert","history","push","email","password","user","setUser","onChange","e","target","name","value","onSubmit","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport UserContext from '../../context/user/userContext';\nimport AlertContext from '../../context/alert/alertContext';\n\nconst Login = props => {\n    const userContext = useContext(UserContext);\n    const { login, error, clearErrors, isAuthenticated } = userContext;\n\n    const alertContext = useContext(AlertContext);\n    const { setAlert /* removeAlert */ } = alertContext;\n\n    useEffect(() => {\n        if (isAuthenticated) {\n            props.history.push('/mainapp');\n        }\n\n        if (error === 'Invalid Credentials') {\n            // setting the error value in state\n            setAlert(error, 'danger'); // calling set alert with the previously set error value\n            clearErrors(); // setting error value back to null\n        }\n        // eslint-disable-next-line\n    }, [error, isAuthenticated, props.history]);\n\n    const [user, setUser] = useState({\n        email: '',\n        password: ''\n    });\n\n    const { email, password } = user;\n\n    const onChange = e => setUser({ ...user, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n        if (email === '' || password === '') {\n            setAlert('Please fill in all fields', 'danger');\n        } else {\n            login({\n                email,\n                password\n            });\n        }\n    };\n\n    return (\n        <div className='container w-50 p-3'>\n            <h1>\n                Account <span className='text-primary'>Login</span>\n            </h1>\n            <form onSubmit={onSubmit}>\n                <div className='form-group  text-left'>\n                    <label htmlFor='email'>Email Address</label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        name='email'\n                        value={email}\n                        onChange={onChange}\n                        required\n                    />\n                </div>\n                <div className='form-group  text-left'>\n                    <label htmlFor='password'>Password</label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        name='password'\n                        value={password}\n                        onChange={onChange}\n                        required\n                    />\n                </div>\n                <input\n                    type='submit'\n                    value='Login'\n                    className='btn btn-primary btn-block'\n                />\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}